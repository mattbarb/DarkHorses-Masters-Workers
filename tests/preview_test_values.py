"""
Preview Test Values Generated by Schema-Aware Test Inserter

This script shows what test values will look like for different column types.
ALL values now include **TEST** marker for easy visual verification.
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent.parent))

from tests.test_schema_auto import SchemaAwareTestInserter

def preview_test_values():
    """Preview test values for common column types"""

    inserter = SchemaAwareTestInserter()

    print("\n" + "=" * 80)
    print("TEST VALUE PREVIEW - ALL VALUES INCLUDE **TEST** MARKER")
    print("=" * 80)

    # Common column types and their test values
    test_cases = [
        # Text columns
        ("horse_name", "character varying"),
        ("jockey_name", "character varying"),
        ("race_comment", "text"),
        ("course_code", "character varying"),

        # Numeric columns
        ("position", "integer"),
        ("weight", "numeric"),
        ("starting_price_decimal", "decimal"),
        ("age", "smallint"),
        ("distance_yards", "bigint"),

        # Boolean columns
        ("is_favorite", "boolean"),
        ("has_pedigree", "boolean"),

        # Date/time columns
        ("race_date", "date"),
        ("created_at", "timestamp without time zone"),
        ("updated_at", "timestamp with time zone"),

        # ID columns
        ("race_id", "character varying"),
        ("horse_id", "character varying"),
        ("jockey_id", "character varying"),

        # JSON columns
        ("metadata", "jsonb"),
    ]

    print("\nColumn Examples (what you'll see in Supabase):\n")

    for col_name, col_type in test_cases:
        test_value = inserter.generate_test_value(col_name, col_type)
        print(f"  {col_name:30s} ({col_type:30s}): {test_value}")

    print("\n" + "=" * 80)
    print("\nExample ra_mst_runners Row in Supabase:")
    print("=" * 80 + "\n")

    # Show a realistic example of what a row will look like
    example_row = {
        "race_id": "**TEST**_race_id_abc123",
        "horse_id": "**TEST**_horse_id_def456",
        "horse_name": "**TEST** Horse Name",
        "jockey_id": "**TEST**_jockey_id_ghi789",
        "jockey_name": "**TEST** Jockey Name",
        "trainer_id": "**TEST**_trainer_id_jkl012",
        "trainer_name": "**TEST** Trainer Name",
        "owner_id": "**TEST**_owner_id_mno345",
        "owner_name": "**TEST** Owner Name",
        "weight": "**TEST** 99.99",
        "position": "**TEST** 9999",
        "distance_beaten": "**TEST** 99.99",
        "starting_price": "**TEST** starting price",
        "starting_price_decimal": "**TEST** 99.99",
        "finishing_time": "**TEST** finishing time",
        "race_comment": "**TEST** race comment",
        "jockey_silk_url": "**TEST** jockey silk url",
        "jockey_claim_lbs": "**TEST** 9999",
        "weight_stones_lbs": "**TEST** weight stones lbs",
        "draw": "**TEST** 9999",
        "age": "**TEST** 9999",
        "official_rating": "**TEST** 9999",
        "is_favorite": "**TEST** TRUE",
        "odds": "**TEST** 99.99",
        "created_at": "**TEST** 2099-12-31T23:59:59",
    }

    for key, value in example_row.items():
        print(f"  {key:30s}: {value}")

    print("\n" + "=" * 80)
    print("VISUAL VERIFICATION:")
    print("=" * 80)
    print("""
Every single field shows **TEST** marker!

This makes visual verification EASY:
1. Open Supabase Table Editor
2. Look at any ra_* table
3. You should see **TEST** in EVERY column
4. If any column is missing **TEST** → that column is NOT being populated

Benefits:
✅ Instant visual confirmation of data population
✅ No ambiguity - if it doesn't say **TEST**, it's not populated
✅ Works across ALL data types (text, numeric, dates, booleans)
✅ Easy to cleanup (search for **TEST** and delete)
""")

    print("=" * 80)

if __name__ == '__main__':
    preview_test_values()
